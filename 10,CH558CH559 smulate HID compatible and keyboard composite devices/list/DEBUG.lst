C51 COMPILER V9.52.0.0   DEBUG                                                             03/13/2017 11:42:23 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\obj\DEBUG.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DEBUG.C LARGE OPTIMIZE(6,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\DEBU
                    -G.lst) OBJECT(.\obj\DEBUG.obj)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : DEBUG.C
   3          * Author             : WCH
   4          * Version            : V1.3
   5          * Date               : 2016/06/24
   6          * Description        : CH559 DEBUG Interface
   7                                                     Support serial port printf function, baud can be changed                                                
   8          *******************************************************************************/
   9          #define         NO_XSFR_DEFINE
  10          #include        <stdio.h>
  11          #include        <string.h>
  12          #include        "DEBUG.H"
  13          
  14          #define         FREQ_SYS        12000000                                                           // System clock 12MHz
  15          #ifndef         BUAD
  16          #define         BUAD    57600
  17          #endif
  18          
  19          /*******************************************************************************
  20          * Function Name  : CfgFsys( )
  21          * Description    : Internal craystal 12MHz was set default, if define FREQ_SYS,Fsys can be configed as bel
             -ow: 
  22                             Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  23          * Input          : None
  24          * Output         : None
  25          * Return         : None
  26          *******************************************************************************/ 
  27          void    CfgFsys( )  
  28          {
  29   1          SAFE_MOD = 0x55;                                                                            // Safe mode
  30   1          SAFE_MOD = 0xAA;                                                                    
  31   1      //  CLOCK_CFG |= bOSC_EN_XT;                                                                    // Enable External crayst
             -al
  32   1      //  CLOCK_CFG &= ~bOSC_EN_INT;                                                                  
  33   1      //      CLOCK_CFG &= ~MASK_SYS_CK_DIV;                  
  34   1      //  CLOCK_CFG |= 6;                                                                             // Fsys = 48MHz
  35   1      //  CLOCK_CFG |= 8;                                                                             // Fsys = 36MHz
  36   1      //  CLOCK_CFG |= 10;                                                                            // Fsys = 28.8MHz
  37   1      //  CLOCK_CFG |= 12;                                                                            // Fsys = 24MHz
  38   1      //  CLOCK_CFG |= 16;                                                                            // Fsys = 18MHz         
  39   1          SAFE_MOD = 0xFF;                                                                            // Disable safe mode
  40   1      //  Modify the FREQ_SYS, if system clock has been changed
  41   1      }
  42          
  43          /*******************************************************************************
  44          * Function Name  : mDelayus(UNIT16 n)
  45          * Description    : Delay n us
  46          * Input          : UNIT16 n
  47          * Output         : None
  48          * Return         : None
  49          *******************************************************************************/ 
  50          void    mDelayuS( UINT16 n )  
  51          {
  52   1              while ( n ) {                                                                                                                                           // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
C51 COMPILER V9.52.0.0   DEBUG                                                             03/13/2017 11:42:23 PAGE 2   

  53   2                      ++ SAFE_MOD;                                                                                                                                    // 2 Fsys cycles, for higher Fsys, add operation here
  54   2      #ifdef  FREQ_SYS
  55   2      #if             FREQ_SYS >= 14000000
                              ++ SAFE_MOD;
              #endif
  58   2      #if             FREQ_SYS >= 16000000
                              ++ SAFE_MOD;
              #endif
  61   2      #if             FREQ_SYS >= 18000000
                              ++ SAFE_MOD;
              #endif
  64   2      #if             FREQ_SYS >= 20000000
                              ++ SAFE_MOD;
              #endif
  67   2      #if             FREQ_SYS >= 22000000
                              ++ SAFE_MOD;
              #endif
  70   2      #if             FREQ_SYS >= 24000000
                              ++ SAFE_MOD;
              #endif
  73   2      #if             FREQ_SYS >= 26000000
                              ++ SAFE_MOD;
              #endif
  76   2      #if             FREQ_SYS >= 28000000
                              ++ SAFE_MOD;
              #endif
  79   2      #if             FREQ_SYS >= 30000000
                              ++ SAFE_MOD;
              #endif
  82   2      #if             FREQ_SYS >= 32000000
                              ++ SAFE_MOD;
              #endif
  85   2      #if             FREQ_SYS >= 34000000
                              ++ SAFE_MOD;
              #endif
  88   2      #if             FREQ_SYS >= 36000000
                              ++ SAFE_MOD;
              #endif
  91   2      #if             FREQ_SYS >= 38000000
                              ++ SAFE_MOD;
              #endif
  94   2      #if             FREQ_SYS >= 40000000
                              ++ SAFE_MOD;
              #endif
  97   2      #if             FREQ_SYS >= 42000000
                              ++ SAFE_MOD;
              #endif
 100   2      #if             FREQ_SYS >= 44000000
                              ++ SAFE_MOD;
              #endif
 103   2      #if             FREQ_SYS >= 46000000
                              ++ SAFE_MOD;
              #endif
 106   2      #if             FREQ_SYS >= 48000000
                              ++ SAFE_MOD;
              #endif
 109   2      #if             FREQ_SYS >= 50000000
                              ++ SAFE_MOD;
              #endif
 112   2      #if             FREQ_SYS >= 52000000
                              ++ SAFE_MOD;
              #endif
C51 COMPILER V9.52.0.0   DEBUG                                                             03/13/2017 11:42:23 PAGE 3   

 115   2      #if             FREQ_SYS >= 54000000
                              ++ SAFE_MOD;
              #endif
 118   2      #if             FREQ_SYS >= 56000000
                              ++ SAFE_MOD;
              #endif
 121   2      #endif
 122   2                      -- n;
 123   2              }
 124   1      }
 125          
 126          /*******************************************************************************
 127          * Function Name  : mDelayms(UNIT16 n)
 128          * Description    : Delay n ms
 129          * Input          : UNIT16 n
 130          * Output         : None
 131          * Return         : None
 132          *******************************************************************************/
 133          void    mDelaymS( UINT16 n )                                                                    
 134          {
 135   1              while ( n ) 
 136   1              {
 137   2                      mDelayuS( 1000 );
 138   2                      -- n;
 139   2              }
 140   1      }                                         
 141          #if 0
              /*******************************************************************************
              * Function Name  : CH559UART0Alter()
              * Description    : CH559 remap the serial port, P0.2 & P0.3
              * Input          : None
              * Output         : None
              * Return         : None
              *******************************************************************************/
              void    CH559UART0Alter()
              {
                  PORT_CFG |= bP0_OC;
                  P0_DIR |= bTXD_;
                  P0_PU |= bTXD_ | bRXD_;
                  PIN_FUNC |= bUART0_PIN_X;                                                                   //´®¿ÚÓ³Éäµ½P0.2ºÍP0.3
              }
              #endif
 157          /*******************************************************************************
 158          * Function Name  : mInitSTDIO()
 159          * Description    : Init serial port, T1 set as baud generator
 160          * Input          : None
 161          * Output         : None
 162          * Return         : None
 163          *******************************************************************************/
 164          void    mInitSTDIO( )
 165          {
 166   1          UINT32 x;
 167   1          UINT8 x2; 
 168   1      
 169   1          SM0 = 0;
 170   1          SM1 = 1;
 171   1          SM2 = 0;                                                                                    // Mode 1
 172   1                                                                                                                                                                                      // Timer 1 generate baud
 173   1          RCLK = 0;                                                                                   // RX clk
 174   1          TCLK = 0;                                                                                   // TX clk
 175   1          PCON |= SMOD;                       
 176   1          x = 10 * FREQ_SYS / BUAD / 16;                                                              // If system clock chang
C51 COMPILER V9.52.0.0   DEBUG                                                             03/13/2017 11:42:23 PAGE 4   

             -ed, please check whether x overflow
 177   1          x2 = x % 10;                        
 178   1          x /= 10;                    
 179   1          if ( x2 >= 5 ) x ++;                                                                        // Data round
 180   1                              
 181   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;                               // 0X20£¬Timer1 auto rel
             -oad
 182   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                                         // Select Timer1 clock
 183   1          TH1 = 0-x;                                                                                  // Set baud count
 184   1          TR1 = 1;                                                                                    // Start Timer1
 185   1          TI = 1;                     
 186   1          REN = 1;                                                                                    // Enable COM0
 187   1      }
 188          
 189          /*******************************************************************************
 190          * Function Name  : CH559UART0RcvByte()
 191          * Description    : CH559UART0 receice a byte
 192          * Input          : None
 193          * Output         : None
 194          * Return         : SBUF
 195          *******************************************************************************/
 196          UINT8   CH559UART0RcvByte( )
 197          {
 198   1          while(RI == 0);                                                                             // Inquiry receice mode
 199   1          RI = 0;
 200   1          return SBUF;
 201   1      }
 202          #if 0
              /*******************************************************************************
              * Function Name  : CH559UART0SendByte(UINT8 SendDat)
              * Description    : CH559UART0 send a byte
              * Input          : UINT8 SendDat
              * Output         : None
              * Return         : None
              *******************************************************************************/
              void    CH559UART0SendByte(UINT8 SendDat)
              {
                      SBUF = SendDat;                                                                         // Inquiry send mode
                      while(TI ==0);
                      TI = 1;
              }
              #endif
 217          /**************************** END *************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
